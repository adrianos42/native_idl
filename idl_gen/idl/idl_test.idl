library idl_test

interface Test {
    value_int: (value: int) -> int,
    value_bool: (value: bool) -> bool,
    value_float: (value: float) -> float,
    value_string: (value: string) -> string,
    value_none: (value: none) -> none,
    value_bytes: (value: bytes) -> bytes,
    value_int_array: (value: int[]) -> int[],
    value_point_struct: (value: Point) -> Point,
    value_int_map: (value: map[string, int]) -> map[int, string],
    value_int_int_map: (value: int[int]) -> int[int],
    value_types: (value: Types) -> Types,
    value_option: (value: option[int]) -> map[int],
    value_none_option: option[int],
    value_result: (value: string) -> result[string, bool],
    value_result_err: result[string, bool],
    value_int_stream: stream[string],
    value_names: (value: Names) -> Names,
    value_values: (value: ValuesFloat) -> ValuesFloat,
    static_value_int: static (value: int) -> int,
}

interface GetName {
    names: (thef: stream[map[int, string]]),
    ship: option[int],
    numbers: result[bool, int],
}

struct Point {
    x: int,
    y: int,
}

type Types {
    IntType: int,
    StringType: string,
}

const Names {
    name: "Adriano",
    surname: "Souza",
}

const ValuesFloat {
    pi: 3.14,
    sqrt: 2.55,
    onedw: 122332.0,
}

const ValuesInteger {
    one: 1,
    two: 2,
    three: 3,
}